/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ExecutionResult as PrismaExecutionResult,
  QueryRequest as PrismaQueryRequest,
} from "@prisma/client";

export class ExecutionResultServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ExecutionResultCountArgs, "select">
  ): Promise<number> {
    return this.prisma.executionResult.count(args);
  }

  async executionResults(
    args: Prisma.ExecutionResultFindManyArgs
  ): Promise<PrismaExecutionResult[]> {
    return this.prisma.executionResult.findMany(args);
  }
  async executionResult(
    args: Prisma.ExecutionResultFindUniqueArgs
  ): Promise<PrismaExecutionResult | null> {
    return this.prisma.executionResult.findUnique(args);
  }
  async createExecutionResult(
    args: Prisma.ExecutionResultCreateArgs
  ): Promise<PrismaExecutionResult> {
    return this.prisma.executionResult.create(args);
  }
  async updateExecutionResult(
    args: Prisma.ExecutionResultUpdateArgs
  ): Promise<PrismaExecutionResult> {
    return this.prisma.executionResult.update(args);
  }
  async deleteExecutionResult(
    args: Prisma.ExecutionResultDeleteArgs
  ): Promise<PrismaExecutionResult> {
    return this.prisma.executionResult.delete(args);
  }

  async getQueryRequest(parentId: string): Promise<PrismaQueryRequest | null> {
    return this.prisma.executionResult
      .findUnique({
        where: { id: parentId },
      })
      .queryRequest();
  }
}
